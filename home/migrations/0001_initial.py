# Generated by Django 5.1.7 on 2025-03-27 15:58

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('tipo_usuario', models.CharField(choices=[('professor', 'Professor'), ('aluno', 'Aluno'), ('admin', 'Administrador')], max_length=10)),
                ('cpf', models.CharField(max_length=11, unique=True)),
                ('telefone', models.CharField(blank=True, max_length=15)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'usuarios',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Aluno',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('curso', models.CharField(max_length=255)),
                ('ira', models.DecimalField(decimal_places=2, max_digits=4)),
                ('github', models.URLField(blank=True)),
                ('interesse_pesquisa', models.CharField(blank=True, max_length=255)),
                ('genero', models.CharField(blank=True, max_length=50)),
                ('ppi', models.BooleanField(default=False)),
                ('usuario', models.OneToOneField(limit_choices_to={'tipo_usuario': 'aluno'}, on_delete=django.db.models.deletion.CASCADE, related_name='perfil_aluno', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'alunos',
            },
        ),
        migrations.CreateModel(
            name='Edital',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(max_length=200)),
                ('descricao', models.TextField()),
                ('arquivo', models.FileField(upload_to='editais/')),
                ('data_publicacao', models.DateTimeField(auto_now_add=True)),
                ('ativo', models.BooleanField(default=True)),
                ('criado_por', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='editais_criados', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Professor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('departamento', models.CharField(max_length=100)),
                ('lattes', models.URLField(blank=True)),
                ('area_atuacao', models.CharField(blank=True, max_length=255)),
                ('usuario', models.OneToOneField(limit_choices_to={'tipo_usuario': 'professor'}, on_delete=django.db.models.deletion.CASCADE, related_name='perfil_professor', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Professores',
                'db_table': 'professores',
            },
        ),
        migrations.CreateModel(
            name='Selecao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_inicio', models.DateTimeField()),
                ('data_fim', models.DateTimeField()),
                ('vagas', models.PositiveIntegerField(default=1)),
                ('edital', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='selecoes', to='home.edital')),
                ('professor_responsavel', models.ForeignKey(limit_choices_to={'tipo_usuario': 'professor'}, on_delete=django.db.models.deletion.CASCADE, related_name='selecoes_responsavel', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Inscricao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_inscricao', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('pendente', 'Pendente'), ('aprovada', 'Aprovada'), ('reprovada', 'Reprovada')], default='pendente', max_length=20)),
                ('documento', models.FileField(upload_to='inscricoes/%Y/%m/')),
                ('observacao', models.TextField(blank=True)),
                ('aluno', models.ForeignKey(limit_choices_to={'tipo_usuario': 'aluno'}, on_delete=django.db.models.deletion.CASCADE, related_name='inscricoes', to=settings.AUTH_USER_MODEL)),
                ('selecao', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inscricoes', to='home.selecao')),
            ],
            options={
                'ordering': ['-data_inscricao'],
                'unique_together': {('aluno', 'selecao')},
            },
        ),
    ]
